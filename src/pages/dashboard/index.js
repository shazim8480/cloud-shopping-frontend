/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/GkNjwEC
 */
import { Button } from "@/components/ui/button";
import {
  TableHead,
  TableRow,
  TableHeader,
  TableCell,
  TableBody,
  Table,
} from "@/components/ui/table";

import { useEffect, useState } from "react";
import DashboardLayout from "@/layouts/DashboardLayout";

// query
import {
  useDeleteProductMutation,
  useGetProductsQuery,
} from "@/redux/feature/products/products-api";

// utils
import { formatTimestamp } from "@/lib/utils";
import Modal from "@/components/ui/modal";
import GenerateProductRow from "@/components/GenerateProductRow";

export default function DashboardPage() {
  // query //
  const { data: getProducts } = useGetProductsQuery({
    refetchOnMountOrArgChange: true,
  });

  return (
    <section className="flex-grow p-6">
      <div className="flex items-center justify-between mb-4">
        <h3 className="text-lg font-medium text-green-800">Inventory</h3>
      </div>
      <Table>
        <TableHeader>
          <TableRow>
            <TableHead>Date Added</TableHead>
            <TableHead>Product Name</TableHead>
            <TableHead>Category</TableHead>
            <TableHead>Added By</TableHead>
            <TableHead className="text-right">Price</TableHead>
            <TableHead />
          </TableRow>
        </TableHeader>
        <TableBody>
          {/* render all products */}
          {getProducts?.products?.map((item) => {
            let productId = item?.id;
            return <GenerateProductRow productId={productId} item={item} />;
          })}
        </TableBody>
      </Table>
    </section>
  );
}

DashboardPage.getLayout = function getLayout(page) {
  return <DashboardLayout>{page}</DashboardLayout>;
};
